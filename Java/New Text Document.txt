import java.util.Scanner;

public class PrimeNumbersInRange {
   public static void main(String[] args) {
      Scanner input = new Scanner(System.in);
      System.out.print("Enter the lower bound of the range: ");
      int lowerBound = input.nextInt();
      
      System.out.print("Enter the upper bound of the range: ");
      int upperBound = input.nextInt();
      
      for (int i = lowerBound; i <= upperBound; i++) {
         if (isPrime(i)) {
            System.out.print(i + " ");
         }
      }
   }
   
   public static boolean isPrime(int num) {
   
      if (num <= 1) {
         return false;
      }
      
      for (int i = 2; i <= Math.sqrt(num); i++) {
         if (num % i == 0) {
            return false;
         }
      }
      
     
      return true;
   }
}






-------------------------------------------------------------------------------------------

public class DecimalToBinary {
    public static void main(String[] args) {
        int decimal = 12;
        int binary[] = new int[20];
        int i = 0;
        while (decimal > 0) {
            binary[i] = decimal % 2;
            decimal = decimal / 2;
            i++;
        }
        System.out.print("Binary representation of 12 is: ");
        for (int j = i - 1; j >= 0; j--) {
            System.out.print(binary[j]);
        }
    }
}
-------------------------------------------------------------------------------------------
     int j = scanner.nextInt();
        int p = scanner.nextInt();
        int[][] board = new int[n][n];
        for (int k = 1; k <= p; k++) {
            int x = i - k;
            int y = j - k;
            int len = k * 2 + 1;
            for (int row = 0; row < len; row++) {
                for (int col = 0; col < len; col++) {
                    if (x + row >= 0 && x + row < n && y + col >= 0 && y + col < n) {
                        int d = Math.max(Math.abs(row - k), Math.abs(col - k));
                        board[x + row][y + col] = Math.max(board[x + row][y + col], d);
                    }
                }
            }
        }
        for (int[] row : board) {
            for (int cell : row) {
                System.out.print(cell + " ");
            }
            System.out.println();
        }
    }
}